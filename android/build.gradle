buildscript {
    ext.kotlin_version = '2.1.20'

    repositories {
        google()
        mavenCentral()
    }

    dependencies {
        // match the plugin version declared in settings.gradle
    classpath 'com.android.tools.build:gradle:8.7.0'
    classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    // optional: update google services plugin to a newer patch if you want
    classpath 'com.google.gms:google-services:4.4.3'
    }
}

allprojects {
    repositories {
        google()
        mavenCentral()
    }
}

rootProject.buildDir = '../build'

subprojects {
    afterEvaluate { proj ->

        // If this is any Android project (app or library), make sure compileOptions and kotlinOptions are set
        if (proj.plugins.hasPlugin('com.android.application') || proj.plugins.hasPlugin('com.android.library')) {
            proj.android {
                // keep possible namespace fix for audio_streamer
                if (proj.name.contains('audio_streamer')) {
                    if (namespace == null || namespace.trim().isEmpty()) {
                        namespace = proj.group ?: 'plugins.cachet.audio_streamer'
                    }
                }

                // AGP-compatible way: set Java compile compatibility to 17
                compileOptions {
                    sourceCompatibility JavaVersion.VERSION_17
                    targetCompatibility JavaVersion.VERSION_17
                }

                // Also set Kotlin options inside the android block for this module
                // Some modules expose kotlinOptions here and it's safest to set it where available
                try {
                    kotlinOptions {
                        jvmTarget = "17"
                    }
                } catch (ignored) {
                    // some modules may not expose kotlinOptions here; we'll set Kotlin compile tasks later
                }
            }
        }

        // Standardize build directory per project
        project.buildDir = "${rootProject.buildDir}/${project.name}"

        // For all subprojects: ensure JavaCompile tasks use source/target = 17 (do NOT use .release)
        proj.tasks.withType(org.gradle.api.tasks.compile.JavaCompile).configureEach { javaCompile ->
            javaCompile.sourceCompatibility = "17"
            javaCompile.targetCompatibility = "17"
            // If you must force a specific JDK for compilation, uncomment and set path:
            // javaCompile.options.fork = true
            // javaCompile.options.forkOptions.javaHome = file('/usr/lib/jvm/java-17-openjdk-amd64')
        }

        // For all subprojects: ensure Kotlin compile tasks target JVM 17
        proj.tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).configureEach { kt ->
            kt.kotlinOptions {
                jvmTarget = "17"
            }
        }
    }
}

tasks.register("clean", Delete) {
    delete rootProject.buildDir
}
gradle.projectsEvaluated {
    // Set the JDK path here
    if (JavaVersion.current() == JavaVersion.VERSION_17) {
        // If the current JDK is version 17, set the Java home to your desired JDK location
        allprojects {
            tasks.withType(JavaCompile) {
                options.fork = true
                options.forkOptions.javaHome = file('/usr/lib/jvm/java-17-openjdk-amd64')
            }
        }
    }
}